{"id":"node_modules/ffmpeg/lib/video.js","dependencies":[{"name":"D:\\xampp\\htdocs\\webm-tomp4\\package.json","includedInParent":true,"mtime":1623387946764},{"name":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\package.json","includedInParent":true,"mtime":1623387630004},{"name":"fs","loc":{"line":1,"column":19},"parent":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\lib\\video.js","resolved":"C:\\Users\\Arnab\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"path","loc":{"line":2,"column":20},"parent":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\lib\\video.js","resolved":"C:\\Users\\Arnab\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\path-browserify\\index.js"},{"name":"when","loc":{"line":3,"column":20},"parent":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\lib\\video.js","resolved":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\when\\dist\\browser\\when.js"},{"name":"./errors","loc":{"line":5,"column":22},"parent":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\lib\\video.js","resolved":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\lib\\errors.js"},{"name":"./presets","loc":{"line":6,"column":23},"parent":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\lib\\video.js","resolved":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\lib\\presets.js"},{"name":"./utils","loc":{"line":7,"column":21},"parent":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\lib\\video.js","resolved":"D:\\xampp\\htdocs\\webm-tomp4\\node_modules\\ffmpeg\\lib\\utils.js"}],"generated":{"js":"var fs\t\t\t= require('fs')\n  , path\t\t= require('path')\n  , when\t\t= require('when');\n\nvar errors\t\t= require('./errors')\n  , presets\t\t= require('./presets')\n  , utils\t\t= require('./utils');\n\nmodule.exports = function (filePath, settings, infoConfiguration, infoFile) {\n\t\n\t// Public info about file and ffmpeg configuration\n\tthis.file_path\t\t\t\t= filePath;\n\tthis.info_configuration\t\t= infoConfiguration;\n\tthis.metadata\t\t\t\t= infoFile;\n\t\n\t// Commands for building the ffmpeg string conversion\n\tvar commands\t\t= new Array()\n\t  , inputs\t\t\t= new Array()\n\t  , filtersComlpex\t= new Array()\n\t  , output\t\t\t= null;\n\t\n\t// List of options generated from setting functions\n\tvar options\t\t\t= new Object();\n\t\n\t/*****************************************/\n\t/* FUNCTION FOR FILL THE COMMANDS OBJECT */\n\t/*****************************************/\n\t\n\t/**\n\t * Add a command to be bundled into the ffmpeg command call\n\t */\n\tthis.addCommand = function (command, argument) {\n\t\t// Check if exists the current command\n\t\tif (utils.in_array(command, commands) === false) {\n\t\t\t// Add the new command\n\t\t\tcommands.push(command);\n\t\t\t// Add the argument to new command\n\t\t\tif (argument != undefined)\n\t\t\t\tcommands.push(argument);\n\t\t} else \n\t\t\tthrow errors.renderError('command_already_exists', command);\n\t}\n\t\n\t/**\n\t * Add an input stream\n\t */\n\tthis.addInput = function (argument) {\n\t\tinputs.push(argument);\n\t}\n\t\n\t/**\n\t * Add a filter complex\n\t */\n\tthis.addFilterComplex = function (argument) {\n\t\tfiltersComlpex.push(argument);\n\t}\n\t\n\t/**\n\t * Set the output path\n\t */\n\tvar setOutput = function (path) {\n\t\toutput = path;\n\t}\n\t\n\t/*********************/\n\t/* SETTING FUNCTIONS */\n\t/*********************/\n\t\n\t/**\n\t * Disables audio encoding\n\t */\n\tthis.setDisableAudio = function () {\n\t\tif (options.audio == undefined)\n\t\t\toptions.audio = new Object();\n\t\t// Set the new option\n\t\toptions.audio.disabled = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Disables video encoding\n\t */\n\tthis.setDisableVideo = function () {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.disabled = true;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the new video format\n\t */\n\tthis.setVideoFormat = function (format) {\n\t\t// Check if the format is supported by ffmpeg version\n\t\tif (this.info_configuration.encode.indexOf(format) != -1) {\n\t\t\tif (options.video == undefined)\n\t\t\t\toptions.video = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.video.format = format;\n\t\t\treturn this;\n\t\t} else \n\t\t\tthrow errors.renderError('format_not_supported', format);\n\t}\n\t\n\t/**\n\t * Sets the new audio codec\n\t */\n\tthis.setVideoCodec = function (codec) {\n\t\t// Check if the codec is supported by ffmpeg version\n\t\tif (this.info_configuration.encode.indexOf(codec) != -1) {\n\t\t\tif (options.video == undefined)\n\t\t\t\toptions.video = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.video.codec = codec;\n\t\t\treturn this;\n\t\t} else \n\t\t\tthrow errors.renderError('codec_not_supported', codec);\n\t}\n\t\n\t/**\n\t * Sets the video bitrate\n\t */\n\tthis.setVideoBitRate = function (bitrate) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.bitrate = bitrate;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the framerate of the video\n\t */\n\tthis.setVideoFrameRate = function (framerate) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.framerate = framerate;\n\t\treturn this;\t\t\n\t}\n\t\n\t/**\n\t * Sets the start time\n\t */\n\tthis.setVideoStartTime = function (time) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t\n\t\t// Check if time is a string that contain: hours, minutes and seconds\n\t\tif (isNaN(time) && /([0-9]+):([0-9]{2}):([0-9]{2})/.exec(time)) {\n\t\t\ttime = utils.durationToSeconds(time);\t\t\t\n\t\t} else if (!isNaN(time) && parseInt(time) == time) {\n\t\t\ttime = parseInt(time, 10);\t\t\t\n\t\t} else {\n\t\t\ttime = 0;\t\t\t\n\t\t}\n\n\t\t// Set the new option\n\t\toptions.video.startTime = time;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the duration\n\t */\n\tthis.setVideoDuration = function (duration) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t\n\t\t// Check if duration is a string that contain: hours, minutes and seconds\n\t\tif (isNaN(duration) && /([0-9]+):([0-9]{2}):([0-9]{2})/.exec(duration)) {\n\t\t\tduration = utils.durationToSeconds(duration);\n\t\t} else if (!isNaN(duration) && parseInt(duration) == duration) {\n\t\t\tduration = parseInt(duration, 10);\t\t\t\n\t\t} else {\n\t\t\tduration = 0;\n\t\t}\n\n\t\t// Set the new option\n\t\toptions.video.duration = duration;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the new aspetc ratio\n\t */\n\tthis.setVideoAspectRatio = function (aspect) {\n\t\t// Check if aspect is a string\n\t\tif (isNaN(aspect)) {\n\t\t\t// Check if aspet is string xx:xx\n\t\t\tif (/([0-9]+):([0-9]+)/.exec(aspect)) {\n\t\t\t\tvar check = /([0-9]+):([0-9]+)/.exec(aspect);\n\t\t\t\taspect = parseFloat((check[1] / check[2]));\n\t\t\t} else {\n\t\t\t\taspect = this.metadata.video.aspect.value;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.aspect = aspect;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Set the size of the video\n\t */\n\tthis.setVideoSize = function (size, keepPixelAspectRatio, keepAspectRatio, paddingColor) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.size = size;\n\t\toptions.video.keepPixelAspectRatio = keepPixelAspectRatio;\n\t\toptions.video.keepAspectRatio = keepAspectRatio;\n\t\toptions.video.paddingColor = paddingColor;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the new audio codec\n\t */\n\tthis.setAudioCodec = function (codec) {\n\t\t// Check if the codec is supported by ffmpeg version\n\t\tif (this.info_configuration.encode.indexOf(codec) != -1) {\n\t\t\t// Check if codec is equal 'MP3' and check if the version of ffmpeg support the libmp3lame function\n\t\t\tif (codec == 'mp3' && this.info_configuration.modules.indexOf('libmp3lame') != -1)\n\t\t\t\tcodec = 'libmp3lame';\n\t\t\t\n\t\t\tif (options.audio == undefined)\n\t\t\t\toptions.audio = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.audio.codec = codec;\n\t\t\treturn this;\n\t\t} else \n\t\t\tthrow errors.renderError('codec_not_supported', codec);\n\t}\n\t\n\t/**\n\t * Sets the audio sample frequency for audio outputs\n\t */\n\tthis.setAudioFrequency = function (frequency) {\n\t\tif (options.audio == undefined)\n\t\t\toptions.audio = new Object();\n\t\t// Set the new option\n\t\toptions.audio.frequency = frequency;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the number of audio channels\n\t */\n\tthis.setAudioChannels = function (channel) {\n\t\t// Check if the channel value is valid\n\t\tif (presets.audio_channel.stereo == channel || presets.audio_channel.mono == channel) {\n\t\t\tif (options.audio == undefined)\n\t\t\t\toptions.audio = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.audio.channel = channel;\n\t\t\treturn this;\t\t\t\n\t\t} else \n\t\t\tthrow errors.renderError('audio_channel_is_invalid', channel);\n\t}\n\t\n\t/**\n\t * Sets the audio bitrate\n\t */\n\tthis.setAudioBitRate = function (bitrate) {\n\t\tif (options.audio == undefined)\n\t\t\toptions.audio = new Object();\n\t\t// Set the new option\n\t\toptions.audio.bitrate = bitrate;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the audio quality\n\t */\n\tthis.setAudioQuality = function (quality) {\n\t\tif (options.audio == undefined)\n\t\t\toptions.audio = new Object();\n\t\t// Set the new option\n\t\toptions.audio.quality = quality;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the watermark\n\t */\n\tthis.setWatermark = function (watermarkPath, settings) {\n\t\t// Base settings\n\t\tvar baseSettings = {\n\t\t\tposition\t\t: \"SW\"\t\t// Position: NE NC NW SE SC SW C CE CW\n\t\t  , margin_nord\t\t: null\t\t// Margin nord\n\t\t  , margin_sud\t\t: null\t\t// Margin sud\n\t\t  , margin_east\t\t: null\t\t// Margin east\n\t\t  , margin_west\t\t: null\t\t// Margin west\n\t\t};\n\t\t\n\t\t// Check if watermark exists\n\t\tif (!fs.existsSync(watermarkPath))\n\t\t\tthrow errors.renderError('invalid_watermark', watermarkPath);\n\t\t\n\t\t// Check if the settings are specified\n\t\tif (settings != null)\n\t\t\tutils.mergeObject(baseSettings, settings);\n\t\t\n\t\t// Check if position is valid\n\t\tif (baseSettings.position == null || utils.in_array(baseSettings.position, ['NE','NC','NW','SE','SC','SW','C','CE','CW']) === false)\n\t\t\tthrow errors.renderError('invalid_watermark_position', baseSettings.position);\n\t\t\n\t\t// Check if margins are valid\n\t\t\n\t\tif (baseSettings.margin_nord == null || isNaN(baseSettings.margin_nord))\n\t\t\tbaseSettings.margin_nord = 0;\n\t\tif (baseSettings.margin_sud == null || isNaN(baseSettings.margin_sud))\n\t\t\tbaseSettings.margin_sud = 0;\n\t\tif (baseSettings.margin_east == null || isNaN(baseSettings.margin_east))\n\t\t\tbaseSettings.margin_east = 0;\n\t\tif (baseSettings.margin_west == null || isNaN(baseSettings.margin_west))\n\t\t\tbaseSettings.margin_west = 0;\n\t\t\n\t\tvar overlay = '';\n\t\t\n\t\tvar getSing = function (val, inverse) {\n\t\t\treturn (val > 0 ? (inverse ? '-' : '+') : (inverse ? '+' : '-')).toString() + Math.abs(val).toString();\n\t\t}\n\t\t\n\t\tvar getHorizontalMargins = function (east, west) {\n\t\t\treturn getSing(east, false).toString() + getSing(west, true).toString();\n\t\t}\n\t\t\n\t\tvar getVerticalMargins = function (nord, sud) {\n\t\t\treturn getSing(nord, false).toString() + getSing(sud, true).toString();\n\t\t}\n\t\t\n\t\t// Calculate formula\t\t\n\t\tswitch (baseSettings.position) {\n\t\t\tcase 'NE':\n\t\t\t\toverlay = '0' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':0' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'NC':\n\t\t\t\toverlay = 'main_w/2-overlay_w/2' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':0' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'NW':\n\t\t\t\toverlay = 'main_w-overlay_w' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':0' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'SE':\n\t\t\t\toverlay = '0' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h-overlay_h' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'SC':\n\t\t\t\toverlay = 'main_w/2-overlay_w/2' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h-overlay_h' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'SW':\n\t\t\t\toverlay = 'main_w-overlay_w' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h-overlay_h' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'CE':\n\t\t\t\toverlay = '0' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h/2-overlay_h/2' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\toverlay = 'main_w/2-overlay_w/2' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h/2-overlay_h/2' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'CW':\n\t\t\t\toverlay = 'main_w-overlay_w' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h/2-overlay_h/2' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\t// Check if the call comes from internal function\n\t\tif (arguments[2] == undefined || arguments[2] == null) {\n\t\t\tif (options.video == undefined)\n\t\t\t\toptions.video = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.video.watermark = { path : watermarkPath, overlay : overlay };\n\t\t\treturn this;\n\t\t} else if (arguments[2] != undefined && arguments[2] === true) {\n\t\t\tthis.addInput(watermarkPath);\n\t\t\tthis.addFilterComplex('overlay=' + overlay);\n\t\t}\n\t}\n\t\n\t/**\n\t * Save all set commands\n\t */\n\tthis.save = function (destionationFileName, callback) {\n\t\t// Check if the 'video' is present in the options\n\t\tif (options.hasOwnProperty('video')) {\n\t\t\t// Check if video is disabled\n\t\t\tif (options.video.hasOwnProperty('disabled')) {\n\t\t\t\tthis.addCommand('-vn');\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// Check all video property\n\t\t\t\tif (options.video.hasOwnProperty('format'))\n\t\t\t\t\tthis.addCommand('-f', options.video.format);\n\t\t\t\tif (options.video.hasOwnProperty('codec'))\n\t\t\t\t\tthis.addCommand('-vcodec', options.video.codec);\n\t\t\t\tif (options.video.hasOwnProperty('bitrate'))\n\t\t\t\t\tthis.addCommand('-b', parseInt(options.video.bitrate, 10) + 'kb');\n\t\t\t\tif (options.video.hasOwnProperty('framerate'))\n\t\t\t\t\tthis.addCommand('-r', parseInt(options.video.framerate, 10));\n\t\t\t\tif (options.video.hasOwnProperty('startTime'))\n\t\t\t\t\tthis.addCommand('-ss', parseInt(options.video.startTime, 10));\n\t\t\t\tif (options.video.hasOwnProperty('duration'))\n\t\t\t\t\tthis.addCommand('-t', parseInt(options.video.duration, 10));\n\t\t\t\t\n\t\t\t\tif (options.video.hasOwnProperty('watermark')) {\n\t\t\t\t\tthis.addInput(options.video.watermark.path);\n\t\t\t\t\tthis.addFilterComplex('overlay=' + options.video.watermark.overlay);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Check if the video should be scaled\n\t\t\t\tif (options.video.hasOwnProperty('size')) {\n\t\t\t\t\tvar newDimension = _calculateNewDimension.call(this);\n\t\t\t\t\t\n\t\t\t\t\tif (newDimension.aspect != null) {\n\t\t\t\t\t\tthis.addFilterComplex('scale=iw*sar:ih, pad=max(iw\\\\,ih*(' + newDimension.aspect.x + '/' + newDimension.aspect.y + ')):ow/(' + newDimension.aspect.x + '/' + newDimension.aspect.y + '):(ow-iw)/2:(oh-ih)/2' + (options.video.paddingColor != null ? ':' + options.video.paddingColor : ''));\n\t\t\t\t\t\tthis.addCommand('-aspect', newDimension.aspect.string);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.addCommand('-s', newDimension.width + 'x' + newDimension.height);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Check if the 'audio' is present in the options\n\t\tif (options.hasOwnProperty('audio')) {\n\t\t\t// Check if audio is disabled\n\t\t\tif (options.audio.hasOwnProperty('disabled')) {\n\t\t\t\tthis.addCommand('-an');\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// Check all audio property\n\t\t\t\tif (options.audio.hasOwnProperty('codec'))\n\t\t\t\t\tthis.addCommand('-acodec', options.audio.codec);\n\t\t\t\tif (options.audio.hasOwnProperty('frequency'))\n\t\t\t\t\tthis.addCommand('-ar', parseInt(options.audio.frequency));\n\t\t\t\tif (options.audio.hasOwnProperty('channel'))\n\t\t\t\t\tthis.addCommand('-ac', options.audio.channel);\n\t\t\t\tif (options.audio.hasOwnProperty('quality'))\n\t\t\t\t\tthis.addCommand('-aq', options.audio.quality);\n\t\t\t\tif (options.audio.hasOwnProperty('bitrate'))\n\t\t\t\t\tthis.addCommand('-ab', parseInt(options.audio.bitrate, 10) + 'k');\n\t\t\t}\n\t\t}\n\t\t\n\t\tsetOutput(destionationFileName);\n\t\t\n\t\treturn execCommand.call(this, callback);\n\t}\n\t\n\t/*********************/\n\t/* INTERNAL FUNCTION */\n\t/*********************/\n\t\n\t/**\n\t * Reset the list of commands\n\t */\n\tvar resetCommands = function (self) {\n\t\tcommands\t\t= new Array()\n\t\tinputs\t\t\t= [self.file_path];\n\t\tfiltersComlpex\t= new Array();\n\t\toutput\t\t\t= null;\n\t\toptions\t\t\t= new Object();\n\t}\n\n\t/**\n\t * Calculate width, height and aspect ratio by the new dimension data\n\t */\n\tvar _calculateNewDimension = function () {\n\t\t// Check if keepPixelAspectRatio is undefined\n\t\tvar keepPixelAspectRatio = typeof options.video.keepPixelAspectRatio != 'boolean' ? false : options.video.keepPixelAspectRatio;\n\t\t// Check if keepAspectRatio is undefined\n\t\tvar keepAspectRatio = typeof options.video.keepAspectRatio != 'boolean' ? false : options.video.keepAspectRatio;\n\t\t\n\t\t// Resolution to be taken as a reference\n\t\tvar referrerResolution = this.metadata.video.resolution;\n\t\t// Check if is need keep pixel aspect ratio\n\t\tif (keepPixelAspectRatio) {\n\t\t\t// Check if exists resolution for pixel aspect ratio\n\t\t\tif (utils.isEmptyObj(this.metadata.video.resolutionSquare))\n\t\t\t\tthrow errors.renderError('resolution_square_not_defined');\n\t\t\t\n\t\t\t// Apply the resolutionSquare\n\t\t\treferrerResolution = this.metadata.video.resolutionSquare;\n\t\t}\n\t\t\n\t\t// Final data\n\t\tvar width\t= null\n\t\t  , height\t= null\n\t\t  , aspect\t= null;\n\n\t\t// Regex to check which type of dimension was specified\n\t\tvar fixedWidth\t\t= /([0-9]+)x\\?/.exec(options.video.size)\n\t\t  , fixedHeight\t\t= /\\?x([0-9]+)/.exec(options.video.size)\n\t\t  , percentage\t\t= /([0-9]{1,2})%/.exec(options.video.size)\n\t\t  , classicSize\t\t= /([0-9]+)x([0-9]+)/.exec(options.video.size);\n\t\t  \n\t\tif (fixedWidth) {\n\t\t\t// Set the width dimension\n\t\t\twidth = parseInt(fixedWidth[1], 10);\t\t\t\n\t\t\t// Check if the video has the aspect ratio setted\n\t\t\tif (!utils.isEmptyObj(this.metadata.video.aspect)) {\n\t\t\t\theight = Math.round((width / this.metadata.video.aspect.x) * this.metadata.video.aspect.y);\n\t\t\t} else {\n\t\t\t\t// Calculte the new height\n\t\t\t\theight = Math.round(referrerResolution.h / (referrerResolution.w / parseInt(fixedWidth[1], 10)));\n\t\t\t}\n\t\t} else if (fixedHeight) {\n\t\t\t// Set the width dimension\n\t\t\theight = parseInt(fixedHeight[1], 10);\t\t\t\n\t\t\t// Check if the video has the aspect ratio setted\n\t\t\tif (!utils.isEmptyObj(this.metadata.video.aspect)) {\n\t\t\t\twidth = Math.round((height / this.metadata.video.aspect.y) * this.metadata.video.aspect.x);\n\t\t\t} else {\n\t\t\t\t// Calculte the new width\n\t\t\t\twidth = Math.round(referrerResolution.w / (referrerResolution.h / parseInt(fixedHeight[1], 10)));\n\t\t\t}\t\t\t\n\t\t} else if (percentage) {\n\t\t\t// Calculte the ratio from percentage\n\t\t\tvar ratio = parseInt(percentage[1], 10) / 100;\n\t\t\t// Calculate the new dimensions\n\t\t\twidth = Math.round(referrerResolution.w * ratio);\n\t\t\theight = Math.round(referrerResolution.h * ratio);\n\t\t} else if (classicSize) {\n\t\t\twidth = parseInt(classicSize[1], 10);\n\t\t\theight = parseInt(classicSize[2], 10);\n\t\t} else \n\t\t\tthrow errors.renderError('size_format', options.video.size);\n\t\t\n\t\t// If the width or height are not multiples of 2 will be decremented by one unit\n\t\tif (width % 2 != 0) width -= 1;\n\t\tif (height % 2 != 0) height -= 1;\n\t\t\n\t\tif (keepAspectRatio) {\n\t\t\t// Calculate the new aspect ratio\n\t\t\tvar gcdValue\t= utils.gcd(width, height);\n\t\t\t\n\t\t\taspect = new Object();\n\t\t\taspect.x = width / gcdValue;\n\t\t\taspect.y = height / gcdValue;\n\t\t\taspect.string = aspect.x + ':' + aspect.y;\n\t\t}\n\t\t\n\t\treturn { width : width, height : height, aspect : aspect };\n\t}\n\t\n\t/**\n\t * Executing the commands list\n\t */\n\tvar execCommand = function (callback, folder) {\n\t\t// Checking if folder is defined\n\t\tvar onlyDestinationFile = folder != undefined ? false : true;\n\t\t// Building the value for return value. Check if the callback is not a function. In this case will created a new instance of the deferred class\n\t\tvar deferred = typeof callback != 'function' ? when.defer() : { promise : null };\n\t\t// Create a copy of the commands list\n\t\tvar finalCommands = ['ffmpeg -i']\n\t\t\t.concat(inputs.join(' -i '))\n\t\t\t.concat(commands.join(' '))\n\t\t\t.concat(filtersComlpex.length > 0 ? ['-filter_complex \"'].concat(filtersComlpex.join(', ')).join('') + '\"' : [])\n\t\t\t.concat([output]);\n\t\t// Reset commands\n\t\tresetCommands(this);\n\t\t// Execute the commands from the list\n\t\tutils.exec(finalCommands, settings, function (error, stdout, stderr) {\n\t\t\t// Building the result\n\t\t\tvar result = null;\n\t\t\tif (!error) {\n\t\t\t\t// Check if show only destination filename or the complete file list\n\t\t\t\tif (onlyDestinationFile) {\n\t\t\t\t\tresult = finalCommands[finalCommands.length-1];\n\t\t\t\t} else {\n\t\t\t\t\t// Clean possible \"/\" at the end of the string\n\t\t\t\t\tif (folder.charAt(folder.length-1) == \"/\")\n\t\t\t\t\t\tfolder = folder.substr(0, folder.length-1);\n\t\t\t\t\t// Read file list inside the folder\n\t\t\t\t\tresult = fs.readdirSync(folder);\n\t\t\t\t\t// Scan all file and prepend the folder path\n\t\t\t\t\tfor (var i in result)\n\t\t\t\t\t\tresult[i] = [folder, result[i]].join('/')\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Check if the callback is a function\n\t\t\tif (typeof callback == 'function') {\n\t\t\t\t// Call the callback to return the info\n\t\t\t\tcallback(error, result);\n\t\t\t} else {\n\t\t\t\tif (error) {\n\t\t\t\t\t// Negative response\n\t\t\t\t\tdeferred.reject(error);\n\t\t\t\t} else {\n\t\t\t\t\t// Positive response\n\t\t\t\t\tdeferred.resolve(result);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// Return a possible promise instance\n\t\treturn deferred.promise;\n\t}\n\t\n\t/*******************/\n\t/* PRESET FUNCTION */\n\t/*******************/\n\t\n\t/**\n\t * Extracting sound from a video, and save it as Mp3\n\t */\n\tthis.fnExtractSoundToMP3 = function (destionationFileName, callback) {\n\t\t// Check if file already exists. In this case will remove it\n\t\tif (fs.existsSync(destionationFileName)) \n\t\t\tfs.unlinkSync(destionationFileName);\n\n\t\t// Building the final path\n\t\tvar destinationDirName\t\t= path.dirname(destionationFileName)\n\t\t  , destinationFileNameWE\t= path.basename(destionationFileName, path.extname(destionationFileName)) + '.mp3'\n\t\t  , finalPath\t\t\t\t= path.join(destinationDirName, destinationFileNameWE);\n\t\t\n\t\tresetCommands(this);\n\t\t\n\t\t// Adding commands to the list\n\t\tthis.addCommand('-vn');\n\t\tthis.addCommand('-ar', 44100);\n\t\tthis.addCommand('-ac', 2);\n\t\tthis.addCommand('-ab', 192);\n\t\tthis.addCommand('-f', 'mp3');\n\t\t\n\t\t// Add destination file path to the command list\n\t\tsetOutput(finalPath);\n\t\t\n\t\t// Executing the commands list\n\t\treturn execCommand.call(this, callback);\n\t}\n\t\n\t/**\n\t * Extract frame from video file\n\t */\n\tthis.fnExtractFrameToJPG = function (/* destinationFolder, settings, callback */) {\n\t\t\n\t\tvar destinationFolder\t= null\n\t\t  , newSettings\t\t\t= null\n\t\t  , callback\t\t\t= null;\n\t\t  \n\t\tvar settings = {\n\t\t\tstart_time\t\t\t\t: null\t\t// Start time to recording\n\t\t  , duration_time\t\t\t: null\t\t// Duration of recording\n\t\t  , frame_rate\t\t\t\t: null\t\t// Number of the frames to capture in one second\n\t\t  , size\t\t\t\t\t: null\t\t// Dimension each frame\n\t\t  , number\t\t\t\t\t: null\t\t// Total frame to capture\n\t\t  , every_n_frames\t\t\t: null\t\t// Frame to capture every N frames\n\t\t  , every_n_seconds\t\t\t: null\t\t// Frame to capture every N seconds\n\t\t  , every_n_percentage\t\t: null\t\t// Frame to capture every N percentage range\n\t\t  , keep_pixel_aspect_ratio\t: true\t\t// Mantain the original pixel video aspect ratio\n\t\t  , keep_aspect_ratio\t\t: true\t\t// Mantain the original aspect ratio\n\t\t  , padding_color\t\t\t: 'black'\t// Padding color\n\t\t  , file_name\t\t\t\t: null\t\t// File name\n\t\t};\n\t\t  \n\t\t// Scan all arguments\n\t\tfor (var i in arguments) {\n\t\t\t// Check the type of the argument\n\t\t\tswitch (typeof arguments[i]) {\n\t\t\t\tcase 'string':\n\t\t\t\t\tdestinationFolder = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\tnewSettings = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'function':\n\t\t\t\t\tcallback = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Check if the settings are specified\n\t\tif (newSettings !== null)\n\t\t\tutils.mergeObject(settings, newSettings);\n\n\t\t// Check if 'start_time' is in the format hours:minutes:seconds\n\t\tif (settings.start_time != null) {\n\t\t\tif (/([0-9]+):([0-9]{2}):([0-9]{2})/.exec(settings.start_time))\n\t\t\t\tsettings.start_time = utils.durationToSeconds(settings.start_time);\n\t\t\telse if (!isNaN(settings.start_time))\n\t\t\t\tsettings.start_time = parseInt(settings.start_time, 10);\n\t\t\telse\n\t\t\t\tsettings.start_time = null;\n\t\t}\n\n\t\t// Check if 'duration_time' is in the format hours:minutes:seconds\n\t\tif (settings.duration_time != null) {\n\t\t\tif (/([0-9]+):([0-9]{2}):([0-9]{2})/.exec(settings.duration_time))\n\t\t\t\tsettings.duration_time = utils.durationToSeconds(settings.duration_time);\n\t\t\telse if (!isNaN(settings.duration_time))\n\t\t\t\tsettings.duration_time = parseInt(settings.duration_time, 10);\n\t\t\telse\n\t\t\t\tsettings.duration_time = null;\n\t\t}\n\n\t\t// Check if the value of the framerate is number type\n\t\tif (settings.frame_rate != null && isNaN(settings.frame_rate))\n\t\t\tsettings.frame_rate = null;\n\n\t\t// If the size is not settings then the size of the screenshots is equal to video size\n\t\tif (settings.size == null)\n\t\t\tsettings.size = this.metadata.video.resolution.w + 'x' + this.metadata.video.resolution.h;\n\n\t\t// Check if the value of the 'number frame to capture' is number type\n\t\tif (settings.number != null && isNaN(settings.number))\n\t\t\tsettings.number = null;\n\n\t\tvar every_n_check = 0;\n\n\t\t// Check if the value of the 'every_n_frames' is number type\n\t\tif (settings.every_n_frames != null && isNaN(settings.every_n_frames)) {\n\t\t\tsettings.every_n_frames = null;\n\t\t\tevery_n_check++;\n\t\t}\n\n\t\t// Check if the value of the 'every_n_seconds' is number type\n\t\tif (settings.every_n_seconds != null && isNaN(settings.every_n_seconds)) {\n\t\t\tsettings.every_n_seconds = null;\n\t\t\tevery_n_check++;\n\t\t}\n\n\t\t// Check if the value of the 'every_n_percentage' is number type\n\t\tif (settings.every_n_percentage != null && (isNaN(settings.every_n_percentage) || settings.every_n_percentage > 100)) {\n\t\t\tsettings.every_n_percentage = null;\n\t\t\tevery_n_check++;\n\t\t}\n\t\t\n\t\tif (every_n_check >= 2) {\n\t\t\tif (callback) {\n\t\t\t\tcallback(errors.renderError('extract_frame_invalid_everyN_options'));\n\t\t\t} else {\n\t\t\t\tthrow errors.renderError('extract_frame_invalid_everyN_options');\n\t\t\t}\n\t\t}\t\t\t\n\t\t\n\t\t// If filename is null then his value is equal to original filename\n\t\tif (settings.file_name == null) {\n\t\t\tsettings.file_name = path.basename(this.file_path, path.extname(this.file_path));\n\t\t} else {\n\t\t\t// Retrieve all possible replacements\n\t\t\tvar replacements = settings.file_name.match(/(\\%[a-zA-Z]{1})/g);\n\t\t\t// Check if exists replacements. The scan all replacements and build the final filename\n\t\t\tif (replacements) {\n\t\t\t\tfor (var i in replacements) {\n\t\t\t\t\tswitch (replacements[i]) {\n\t\t\t\t\t\tcase '%t':\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace('%t', new Date().getTime());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '%s':\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace('%s', settings.size);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '%x':\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace('%x', settings.size.split(':')[0]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '%y':\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace('%y', settings.size.split(':')[1]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace(replacements[i], '');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// At the filename will added the number of the frame\n\t\tsettings.file_name = path.basename(settings.file_name, path.extname(settings.file_name)) + '_%d.jpg';\n\t\t\n\t\t// Create the directory to save the extracted frames\n\t\tutils.mkdir(destinationFolder, 0777);\n\t\t\n\t\tresetCommands(this);\n\t\t\n\t\t// Adding commands to the list\n\t\tif (settings.startTime)\n\t\t\tthis.addCommand('-ss', settings.startTime);\n\t\tif (settings.duration_time)\n\t\t\tthis.addCommand('-t', settings.duration_time);\n\t\tif (settings.frame_rate)\n\t\t\tthis.addCommand('-r', settings.frame_rate);\n\n\t\t// Setting the size and padding settings\n\t\tthis.setVideoSize(settings.size, settings.keep_pixel_aspect_ratio, settings.keep_aspect_ratio, settings.padding_color);\n\t\t// Get the dimensions\n\t\tvar newDimension = _calculateNewDimension.call(this);\n\t\t// Apply the size and padding commands\n\t\tthis.addCommand('-s', newDimension.width + 'x' + newDimension.height);\n\t\t// CHeck if isset aspect ratio options\n\t\tif (newDimension.aspect != null) {\n\t\t\tthis.addFilterComplex('scale=iw*sar:ih, pad=max(iw\\\\,ih*(' + newDimension.aspect.x + '/' + newDimension.aspect.y + ')):ow/(' + newDimension.aspect.x + '/' + newDimension.aspect.y + '):(ow-iw)/2:(oh-ih)/2' + (settings.padding_color != null ? ':' + settings.padding_color : ''));\n\t\t\tthis.addCommand('-aspect', newDimension.aspect.string);\n\t\t}\n\n\t\tif (settings.number)\n\t\t\tthis.addCommand('-vframes', settings.number);\n\t\tif (settings.every_n_frames) {\n\t\t\tthis.addCommand('-vsync', 0);\t\t\t\t\t\n\t\t\tthis.addFilterComplex('select=not(mod(n\\\\,' + settings.every_n_frames + '))');\n\t\t}\n\t\tif (settings.every_n_seconds) {\n\t\t\tthis.addCommand('-vsync', 0);\n\t\t\tthis.addFilterComplex('select=not(mod(t\\\\,' + settings.every_n_seconds + '))');\n\t\t}\n\t\tif (settings.every_n_percentage) {\n\t\t\tthis.addCommand('-vsync', 0);\n\t\t\tthis.addFilterComplex('select=not(mod(t\\\\,' + parseInt((this.metadata.duration.seconds / 100) * settings.every_n_percentage) + '))');\n\t\t}\n\t\t\n\t\t// Add destination file path to the command list\n\t\tsetOutput([destinationFolder,settings.file_name].join('/'));\n\n\t\t// Executing the commands list\n\t\treturn execCommand.call(this, callback, destinationFolder);\n\t}\n\n\t/**\n\t * Add a watermark to the video and save it\n\t */\n\tthis.fnAddWatermark = function (watermarkPath /* newFilepath , settings, callback */) {\n\n\t\tvar newFilepath\t\t= null\n\t\t  , newSettings\t\t= null\n\t\t  , callback\t\t= null;\n\t\t  \n\t\t// Scan all arguments\n\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t// Check the type of the argument\n\t\t\tswitch (typeof arguments[i]) {\n\t\t\t\tcase 'string':\n\t\t\t\t\tnewFilepath = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\tnewSettings = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'function':\n\t\t\t\t\tcallback = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tresetCommands(this);\n\n\t\t// Call the function to add the watermark options\n\t\tthis.setWatermark(watermarkPath, newSettings, true);\n\t\t\n\t\tif (newFilepath == null)\n\t\t\tnewFilepath = path.dirname(this.file_path) + '/' + \n\t\t\t\t\t\t  path.basename(this.file_path, path.extname(this.file_path)) + '_watermark_' + \n\t\t\t\t\t\t  path.basename(watermarkPath, path.extname(watermarkPath)) + \n\t\t\t\t\t\t  path.extname(this.file_path);\n\t\t\n\t\t// Add destination file path to the command list\n\t\tsetOutput(newFilepath);\n\n\t\t// Executing the commands list\n\t\treturn execCommand.call(this, callback);\n\t}\n\t\n\t/**\n\t * Constructor\n\t */\n\tvar __constructor = function (self) {\n\t\tresetCommands(self);\n\t}(this);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/ffmpeg/lib/video.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}}],"sources":{"node_modules/ffmpeg/lib/video.js":"var fs\t\t\t= require('fs')\n  , path\t\t= require('path')\n  , when\t\t= require('when');\n\nvar errors\t\t= require('./errors')\n  , presets\t\t= require('./presets')\n  , utils\t\t= require('./utils');\n\nmodule.exports = function (filePath, settings, infoConfiguration, infoFile) {\n\t\n\t// Public info about file and ffmpeg configuration\n\tthis.file_path\t\t\t\t= filePath;\n\tthis.info_configuration\t\t= infoConfiguration;\n\tthis.metadata\t\t\t\t= infoFile;\n\t\n\t// Commands for building the ffmpeg string conversion\n\tvar commands\t\t= new Array()\n\t  , inputs\t\t\t= new Array()\n\t  , filtersComlpex\t= new Array()\n\t  , output\t\t\t= null;\n\t\n\t// List of options generated from setting functions\n\tvar options\t\t\t= new Object();\n\t\n\t/*****************************************/\n\t/* FUNCTION FOR FILL THE COMMANDS OBJECT */\n\t/*****************************************/\n\t\n\t/**\n\t * Add a command to be bundled into the ffmpeg command call\n\t */\n\tthis.addCommand = function (command, argument) {\n\t\t// Check if exists the current command\n\t\tif (utils.in_array(command, commands) === false) {\n\t\t\t// Add the new command\n\t\t\tcommands.push(command);\n\t\t\t// Add the argument to new command\n\t\t\tif (argument != undefined)\n\t\t\t\tcommands.push(argument);\n\t\t} else \n\t\t\tthrow errors.renderError('command_already_exists', command);\n\t}\n\t\n\t/**\n\t * Add an input stream\n\t */\n\tthis.addInput = function (argument) {\n\t\tinputs.push(argument);\n\t}\n\t\n\t/**\n\t * Add a filter complex\n\t */\n\tthis.addFilterComplex = function (argument) {\n\t\tfiltersComlpex.push(argument);\n\t}\n\t\n\t/**\n\t * Set the output path\n\t */\n\tvar setOutput = function (path) {\n\t\toutput = path;\n\t}\n\t\n\t/*********************/\n\t/* SETTING FUNCTIONS */\n\t/*********************/\n\t\n\t/**\n\t * Disables audio encoding\n\t */\n\tthis.setDisableAudio = function () {\n\t\tif (options.audio == undefined)\n\t\t\toptions.audio = new Object();\n\t\t// Set the new option\n\t\toptions.audio.disabled = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Disables video encoding\n\t */\n\tthis.setDisableVideo = function () {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.disabled = true;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the new video format\n\t */\n\tthis.setVideoFormat = function (format) {\n\t\t// Check if the format is supported by ffmpeg version\n\t\tif (this.info_configuration.encode.indexOf(format) != -1) {\n\t\t\tif (options.video == undefined)\n\t\t\t\toptions.video = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.video.format = format;\n\t\t\treturn this;\n\t\t} else \n\t\t\tthrow errors.renderError('format_not_supported', format);\n\t}\n\t\n\t/**\n\t * Sets the new audio codec\n\t */\n\tthis.setVideoCodec = function (codec) {\n\t\t// Check if the codec is supported by ffmpeg version\n\t\tif (this.info_configuration.encode.indexOf(codec) != -1) {\n\t\t\tif (options.video == undefined)\n\t\t\t\toptions.video = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.video.codec = codec;\n\t\t\treturn this;\n\t\t} else \n\t\t\tthrow errors.renderError('codec_not_supported', codec);\n\t}\n\t\n\t/**\n\t * Sets the video bitrate\n\t */\n\tthis.setVideoBitRate = function (bitrate) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.bitrate = bitrate;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the framerate of the video\n\t */\n\tthis.setVideoFrameRate = function (framerate) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.framerate = framerate;\n\t\treturn this;\t\t\n\t}\n\t\n\t/**\n\t * Sets the start time\n\t */\n\tthis.setVideoStartTime = function (time) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t\n\t\t// Check if time is a string that contain: hours, minutes and seconds\n\t\tif (isNaN(time) && /([0-9]+):([0-9]{2}):([0-9]{2})/.exec(time)) {\n\t\t\ttime = utils.durationToSeconds(time);\t\t\t\n\t\t} else if (!isNaN(time) && parseInt(time) == time) {\n\t\t\ttime = parseInt(time, 10);\t\t\t\n\t\t} else {\n\t\t\ttime = 0;\t\t\t\n\t\t}\n\n\t\t// Set the new option\n\t\toptions.video.startTime = time;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the duration\n\t */\n\tthis.setVideoDuration = function (duration) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t\n\t\t// Check if duration is a string that contain: hours, minutes and seconds\n\t\tif (isNaN(duration) && /([0-9]+):([0-9]{2}):([0-9]{2})/.exec(duration)) {\n\t\t\tduration = utils.durationToSeconds(duration);\n\t\t} else if (!isNaN(duration) && parseInt(duration) == duration) {\n\t\t\tduration = parseInt(duration, 10);\t\t\t\n\t\t} else {\n\t\t\tduration = 0;\n\t\t}\n\n\t\t// Set the new option\n\t\toptions.video.duration = duration;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the new aspetc ratio\n\t */\n\tthis.setVideoAspectRatio = function (aspect) {\n\t\t// Check if aspect is a string\n\t\tif (isNaN(aspect)) {\n\t\t\t// Check if aspet is string xx:xx\n\t\t\tif (/([0-9]+):([0-9]+)/.exec(aspect)) {\n\t\t\t\tvar check = /([0-9]+):([0-9]+)/.exec(aspect);\n\t\t\t\taspect = parseFloat((check[1] / check[2]));\n\t\t\t} else {\n\t\t\t\taspect = this.metadata.video.aspect.value;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.aspect = aspect;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Set the size of the video\n\t */\n\tthis.setVideoSize = function (size, keepPixelAspectRatio, keepAspectRatio, paddingColor) {\n\t\tif (options.video == undefined)\n\t\t\toptions.video = new Object();\n\t\t// Set the new option\n\t\toptions.video.size = size;\n\t\toptions.video.keepPixelAspectRatio = keepPixelAspectRatio;\n\t\toptions.video.keepAspectRatio = keepAspectRatio;\n\t\toptions.video.paddingColor = paddingColor;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the new audio codec\n\t */\n\tthis.setAudioCodec = function (codec) {\n\t\t// Check if the codec is supported by ffmpeg version\n\t\tif (this.info_configuration.encode.indexOf(codec) != -1) {\n\t\t\t// Check if codec is equal 'MP3' and check if the version of ffmpeg support the libmp3lame function\n\t\t\tif (codec == 'mp3' && this.info_configuration.modules.indexOf('libmp3lame') != -1)\n\t\t\t\tcodec = 'libmp3lame';\n\t\t\t\n\t\t\tif (options.audio == undefined)\n\t\t\t\toptions.audio = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.audio.codec = codec;\n\t\t\treturn this;\n\t\t} else \n\t\t\tthrow errors.renderError('codec_not_supported', codec);\n\t}\n\t\n\t/**\n\t * Sets the audio sample frequency for audio outputs\n\t */\n\tthis.setAudioFrequency = function (frequency) {\n\t\tif (options.audio == undefined)\n\t\t\toptions.audio = new Object();\n\t\t// Set the new option\n\t\toptions.audio.frequency = frequency;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the number of audio channels\n\t */\n\tthis.setAudioChannels = function (channel) {\n\t\t// Check if the channel value is valid\n\t\tif (presets.audio_channel.stereo == channel || presets.audio_channel.mono == channel) {\n\t\t\tif (options.audio == undefined)\n\t\t\t\toptions.audio = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.audio.channel = channel;\n\t\t\treturn this;\t\t\t\n\t\t} else \n\t\t\tthrow errors.renderError('audio_channel_is_invalid', channel);\n\t}\n\t\n\t/**\n\t * Sets the audio bitrate\n\t */\n\tthis.setAudioBitRate = function (bitrate) {\n\t\tif (options.audio == undefined)\n\t\t\toptions.audio = new Object();\n\t\t// Set the new option\n\t\toptions.audio.bitrate = bitrate;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the audio quality\n\t */\n\tthis.setAudioQuality = function (quality) {\n\t\tif (options.audio == undefined)\n\t\t\toptions.audio = new Object();\n\t\t// Set the new option\n\t\toptions.audio.quality = quality;\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Sets the watermark\n\t */\n\tthis.setWatermark = function (watermarkPath, settings) {\n\t\t// Base settings\n\t\tvar baseSettings = {\n\t\t\tposition\t\t: \"SW\"\t\t// Position: NE NC NW SE SC SW C CE CW\n\t\t  , margin_nord\t\t: null\t\t// Margin nord\n\t\t  , margin_sud\t\t: null\t\t// Margin sud\n\t\t  , margin_east\t\t: null\t\t// Margin east\n\t\t  , margin_west\t\t: null\t\t// Margin west\n\t\t};\n\t\t\n\t\t// Check if watermark exists\n\t\tif (!fs.existsSync(watermarkPath))\n\t\t\tthrow errors.renderError('invalid_watermark', watermarkPath);\n\t\t\n\t\t// Check if the settings are specified\n\t\tif (settings != null)\n\t\t\tutils.mergeObject(baseSettings, settings);\n\t\t\n\t\t// Check if position is valid\n\t\tif (baseSettings.position == null || utils.in_array(baseSettings.position, ['NE','NC','NW','SE','SC','SW','C','CE','CW']) === false)\n\t\t\tthrow errors.renderError('invalid_watermark_position', baseSettings.position);\n\t\t\n\t\t// Check if margins are valid\n\t\t\n\t\tif (baseSettings.margin_nord == null || isNaN(baseSettings.margin_nord))\n\t\t\tbaseSettings.margin_nord = 0;\n\t\tif (baseSettings.margin_sud == null || isNaN(baseSettings.margin_sud))\n\t\t\tbaseSettings.margin_sud = 0;\n\t\tif (baseSettings.margin_east == null || isNaN(baseSettings.margin_east))\n\t\t\tbaseSettings.margin_east = 0;\n\t\tif (baseSettings.margin_west == null || isNaN(baseSettings.margin_west))\n\t\t\tbaseSettings.margin_west = 0;\n\t\t\n\t\tvar overlay = '';\n\t\t\n\t\tvar getSing = function (val, inverse) {\n\t\t\treturn (val > 0 ? (inverse ? '-' : '+') : (inverse ? '+' : '-')).toString() + Math.abs(val).toString();\n\t\t}\n\t\t\n\t\tvar getHorizontalMargins = function (east, west) {\n\t\t\treturn getSing(east, false).toString() + getSing(west, true).toString();\n\t\t}\n\t\t\n\t\tvar getVerticalMargins = function (nord, sud) {\n\t\t\treturn getSing(nord, false).toString() + getSing(sud, true).toString();\n\t\t}\n\t\t\n\t\t// Calculate formula\t\t\n\t\tswitch (baseSettings.position) {\n\t\t\tcase 'NE':\n\t\t\t\toverlay = '0' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':0' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'NC':\n\t\t\t\toverlay = 'main_w/2-overlay_w/2' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':0' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'NW':\n\t\t\t\toverlay = 'main_w-overlay_w' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':0' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'SE':\n\t\t\t\toverlay = '0' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h-overlay_h' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'SC':\n\t\t\t\toverlay = 'main_w/2-overlay_w/2' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h-overlay_h' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'SW':\n\t\t\t\toverlay = 'main_w-overlay_w' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h-overlay_h' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'CE':\n\t\t\t\toverlay = '0' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h/2-overlay_h/2' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\toverlay = 'main_w/2-overlay_w/2' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h/2-overlay_h/2' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t\tcase 'CW':\n\t\t\t\toverlay = 'main_w-overlay_w' + getHorizontalMargins(baseSettings.margin_east, baseSettings.margin_west) + ':main_h/2-overlay_h/2' + getVerticalMargins(baseSettings.margin_nord, baseSettings.margin_sud);\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\t// Check if the call comes from internal function\n\t\tif (arguments[2] == undefined || arguments[2] == null) {\n\t\t\tif (options.video == undefined)\n\t\t\t\toptions.video = new Object();\n\t\t\t// Set the new option\n\t\t\toptions.video.watermark = { path : watermarkPath, overlay : overlay };\n\t\t\treturn this;\n\t\t} else if (arguments[2] != undefined && arguments[2] === true) {\n\t\t\tthis.addInput(watermarkPath);\n\t\t\tthis.addFilterComplex('overlay=' + overlay);\n\t\t}\n\t}\n\t\n\t/**\n\t * Save all set commands\n\t */\n\tthis.save = function (destionationFileName, callback) {\n\t\t// Check if the 'video' is present in the options\n\t\tif (options.hasOwnProperty('video')) {\n\t\t\t// Check if video is disabled\n\t\t\tif (options.video.hasOwnProperty('disabled')) {\n\t\t\t\tthis.addCommand('-vn');\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// Check all video property\n\t\t\t\tif (options.video.hasOwnProperty('format'))\n\t\t\t\t\tthis.addCommand('-f', options.video.format);\n\t\t\t\tif (options.video.hasOwnProperty('codec'))\n\t\t\t\t\tthis.addCommand('-vcodec', options.video.codec);\n\t\t\t\tif (options.video.hasOwnProperty('bitrate'))\n\t\t\t\t\tthis.addCommand('-b', parseInt(options.video.bitrate, 10) + 'kb');\n\t\t\t\tif (options.video.hasOwnProperty('framerate'))\n\t\t\t\t\tthis.addCommand('-r', parseInt(options.video.framerate, 10));\n\t\t\t\tif (options.video.hasOwnProperty('startTime'))\n\t\t\t\t\tthis.addCommand('-ss', parseInt(options.video.startTime, 10));\n\t\t\t\tif (options.video.hasOwnProperty('duration'))\n\t\t\t\t\tthis.addCommand('-t', parseInt(options.video.duration, 10));\n\t\t\t\t\n\t\t\t\tif (options.video.hasOwnProperty('watermark')) {\n\t\t\t\t\tthis.addInput(options.video.watermark.path);\n\t\t\t\t\tthis.addFilterComplex('overlay=' + options.video.watermark.overlay);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Check if the video should be scaled\n\t\t\t\tif (options.video.hasOwnProperty('size')) {\n\t\t\t\t\tvar newDimension = _calculateNewDimension.call(this);\n\t\t\t\t\t\n\t\t\t\t\tif (newDimension.aspect != null) {\n\t\t\t\t\t\tthis.addFilterComplex('scale=iw*sar:ih, pad=max(iw\\\\,ih*(' + newDimension.aspect.x + '/' + newDimension.aspect.y + ')):ow/(' + newDimension.aspect.x + '/' + newDimension.aspect.y + '):(ow-iw)/2:(oh-ih)/2' + (options.video.paddingColor != null ? ':' + options.video.paddingColor : ''));\n\t\t\t\t\t\tthis.addCommand('-aspect', newDimension.aspect.string);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.addCommand('-s', newDimension.width + 'x' + newDimension.height);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Check if the 'audio' is present in the options\n\t\tif (options.hasOwnProperty('audio')) {\n\t\t\t// Check if audio is disabled\n\t\t\tif (options.audio.hasOwnProperty('disabled')) {\n\t\t\t\tthis.addCommand('-an');\t\t\t\t\n\t\t\t} else {\n\t\t\t\t// Check all audio property\n\t\t\t\tif (options.audio.hasOwnProperty('codec'))\n\t\t\t\t\tthis.addCommand('-acodec', options.audio.codec);\n\t\t\t\tif (options.audio.hasOwnProperty('frequency'))\n\t\t\t\t\tthis.addCommand('-ar', parseInt(options.audio.frequency));\n\t\t\t\tif (options.audio.hasOwnProperty('channel'))\n\t\t\t\t\tthis.addCommand('-ac', options.audio.channel);\n\t\t\t\tif (options.audio.hasOwnProperty('quality'))\n\t\t\t\t\tthis.addCommand('-aq', options.audio.quality);\n\t\t\t\tif (options.audio.hasOwnProperty('bitrate'))\n\t\t\t\t\tthis.addCommand('-ab', parseInt(options.audio.bitrate, 10) + 'k');\n\t\t\t}\n\t\t}\n\t\t\n\t\tsetOutput(destionationFileName);\n\t\t\n\t\treturn execCommand.call(this, callback);\n\t}\n\t\n\t/*********************/\n\t/* INTERNAL FUNCTION */\n\t/*********************/\n\t\n\t/**\n\t * Reset the list of commands\n\t */\n\tvar resetCommands = function (self) {\n\t\tcommands\t\t= new Array()\n\t\tinputs\t\t\t= [self.file_path];\n\t\tfiltersComlpex\t= new Array();\n\t\toutput\t\t\t= null;\n\t\toptions\t\t\t= new Object();\n\t}\n\n\t/**\n\t * Calculate width, height and aspect ratio by the new dimension data\n\t */\n\tvar _calculateNewDimension = function () {\n\t\t// Check if keepPixelAspectRatio is undefined\n\t\tvar keepPixelAspectRatio = typeof options.video.keepPixelAspectRatio != 'boolean' ? false : options.video.keepPixelAspectRatio;\n\t\t// Check if keepAspectRatio is undefined\n\t\tvar keepAspectRatio = typeof options.video.keepAspectRatio != 'boolean' ? false : options.video.keepAspectRatio;\n\t\t\n\t\t// Resolution to be taken as a reference\n\t\tvar referrerResolution = this.metadata.video.resolution;\n\t\t// Check if is need keep pixel aspect ratio\n\t\tif (keepPixelAspectRatio) {\n\t\t\t// Check if exists resolution for pixel aspect ratio\n\t\t\tif (utils.isEmptyObj(this.metadata.video.resolutionSquare))\n\t\t\t\tthrow errors.renderError('resolution_square_not_defined');\n\t\t\t\n\t\t\t// Apply the resolutionSquare\n\t\t\treferrerResolution = this.metadata.video.resolutionSquare;\n\t\t}\n\t\t\n\t\t// Final data\n\t\tvar width\t= null\n\t\t  , height\t= null\n\t\t  , aspect\t= null;\n\n\t\t// Regex to check which type of dimension was specified\n\t\tvar fixedWidth\t\t= /([0-9]+)x\\?/.exec(options.video.size)\n\t\t  , fixedHeight\t\t= /\\?x([0-9]+)/.exec(options.video.size)\n\t\t  , percentage\t\t= /([0-9]{1,2})%/.exec(options.video.size)\n\t\t  , classicSize\t\t= /([0-9]+)x([0-9]+)/.exec(options.video.size);\n\t\t  \n\t\tif (fixedWidth) {\n\t\t\t// Set the width dimension\n\t\t\twidth = parseInt(fixedWidth[1], 10);\t\t\t\n\t\t\t// Check if the video has the aspect ratio setted\n\t\t\tif (!utils.isEmptyObj(this.metadata.video.aspect)) {\n\t\t\t\theight = Math.round((width / this.metadata.video.aspect.x) * this.metadata.video.aspect.y);\n\t\t\t} else {\n\t\t\t\t// Calculte the new height\n\t\t\t\theight = Math.round(referrerResolution.h / (referrerResolution.w / parseInt(fixedWidth[1], 10)));\n\t\t\t}\n\t\t} else if (fixedHeight) {\n\t\t\t// Set the width dimension\n\t\t\theight = parseInt(fixedHeight[1], 10);\t\t\t\n\t\t\t// Check if the video has the aspect ratio setted\n\t\t\tif (!utils.isEmptyObj(this.metadata.video.aspect)) {\n\t\t\t\twidth = Math.round((height / this.metadata.video.aspect.y) * this.metadata.video.aspect.x);\n\t\t\t} else {\n\t\t\t\t// Calculte the new width\n\t\t\t\twidth = Math.round(referrerResolution.w / (referrerResolution.h / parseInt(fixedHeight[1], 10)));\n\t\t\t}\t\t\t\n\t\t} else if (percentage) {\n\t\t\t// Calculte the ratio from percentage\n\t\t\tvar ratio = parseInt(percentage[1], 10) / 100;\n\t\t\t// Calculate the new dimensions\n\t\t\twidth = Math.round(referrerResolution.w * ratio);\n\t\t\theight = Math.round(referrerResolution.h * ratio);\n\t\t} else if (classicSize) {\n\t\t\twidth = parseInt(classicSize[1], 10);\n\t\t\theight = parseInt(classicSize[2], 10);\n\t\t} else \n\t\t\tthrow errors.renderError('size_format', options.video.size);\n\t\t\n\t\t// If the width or height are not multiples of 2 will be decremented by one unit\n\t\tif (width % 2 != 0) width -= 1;\n\t\tif (height % 2 != 0) height -= 1;\n\t\t\n\t\tif (keepAspectRatio) {\n\t\t\t// Calculate the new aspect ratio\n\t\t\tvar gcdValue\t= utils.gcd(width, height);\n\t\t\t\n\t\t\taspect = new Object();\n\t\t\taspect.x = width / gcdValue;\n\t\t\taspect.y = height / gcdValue;\n\t\t\taspect.string = aspect.x + ':' + aspect.y;\n\t\t}\n\t\t\n\t\treturn { width : width, height : height, aspect : aspect };\n\t}\n\t\n\t/**\n\t * Executing the commands list\n\t */\n\tvar execCommand = function (callback, folder) {\n\t\t// Checking if folder is defined\n\t\tvar onlyDestinationFile = folder != undefined ? false : true;\n\t\t// Building the value for return value. Check if the callback is not a function. In this case will created a new instance of the deferred class\n\t\tvar deferred = typeof callback != 'function' ? when.defer() : { promise : null };\n\t\t// Create a copy of the commands list\n\t\tvar finalCommands = ['ffmpeg -i']\n\t\t\t.concat(inputs.join(' -i '))\n\t\t\t.concat(commands.join(' '))\n\t\t\t.concat(filtersComlpex.length > 0 ? ['-filter_complex \"'].concat(filtersComlpex.join(', ')).join('') + '\"' : [])\n\t\t\t.concat([output]);\n\t\t// Reset commands\n\t\tresetCommands(this);\n\t\t// Execute the commands from the list\n\t\tutils.exec(finalCommands, settings, function (error, stdout, stderr) {\n\t\t\t// Building the result\n\t\t\tvar result = null;\n\t\t\tif (!error) {\n\t\t\t\t// Check if show only destination filename or the complete file list\n\t\t\t\tif (onlyDestinationFile) {\n\t\t\t\t\tresult = finalCommands[finalCommands.length-1];\n\t\t\t\t} else {\n\t\t\t\t\t// Clean possible \"/\" at the end of the string\n\t\t\t\t\tif (folder.charAt(folder.length-1) == \"/\")\n\t\t\t\t\t\tfolder = folder.substr(0, folder.length-1);\n\t\t\t\t\t// Read file list inside the folder\n\t\t\t\t\tresult = fs.readdirSync(folder);\n\t\t\t\t\t// Scan all file and prepend the folder path\n\t\t\t\t\tfor (var i in result)\n\t\t\t\t\t\tresult[i] = [folder, result[i]].join('/')\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Check if the callback is a function\n\t\t\tif (typeof callback == 'function') {\n\t\t\t\t// Call the callback to return the info\n\t\t\t\tcallback(error, result);\n\t\t\t} else {\n\t\t\t\tif (error) {\n\t\t\t\t\t// Negative response\n\t\t\t\t\tdeferred.reject(error);\n\t\t\t\t} else {\n\t\t\t\t\t// Positive response\n\t\t\t\t\tdeferred.resolve(result);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// Return a possible promise instance\n\t\treturn deferred.promise;\n\t}\n\t\n\t/*******************/\n\t/* PRESET FUNCTION */\n\t/*******************/\n\t\n\t/**\n\t * Extracting sound from a video, and save it as Mp3\n\t */\n\tthis.fnExtractSoundToMP3 = function (destionationFileName, callback) {\n\t\t// Check if file already exists. In this case will remove it\n\t\tif (fs.existsSync(destionationFileName)) \n\t\t\tfs.unlinkSync(destionationFileName);\n\n\t\t// Building the final path\n\t\tvar destinationDirName\t\t= path.dirname(destionationFileName)\n\t\t  , destinationFileNameWE\t= path.basename(destionationFileName, path.extname(destionationFileName)) + '.mp3'\n\t\t  , finalPath\t\t\t\t= path.join(destinationDirName, destinationFileNameWE);\n\t\t\n\t\tresetCommands(this);\n\t\t\n\t\t// Adding commands to the list\n\t\tthis.addCommand('-vn');\n\t\tthis.addCommand('-ar', 44100);\n\t\tthis.addCommand('-ac', 2);\n\t\tthis.addCommand('-ab', 192);\n\t\tthis.addCommand('-f', 'mp3');\n\t\t\n\t\t// Add destination file path to the command list\n\t\tsetOutput(finalPath);\n\t\t\n\t\t// Executing the commands list\n\t\treturn execCommand.call(this, callback);\n\t}\n\t\n\t/**\n\t * Extract frame from video file\n\t */\n\tthis.fnExtractFrameToJPG = function (/* destinationFolder, settings, callback */) {\n\t\t\n\t\tvar destinationFolder\t= null\n\t\t  , newSettings\t\t\t= null\n\t\t  , callback\t\t\t= null;\n\t\t  \n\t\tvar settings = {\n\t\t\tstart_time\t\t\t\t: null\t\t// Start time to recording\n\t\t  , duration_time\t\t\t: null\t\t// Duration of recording\n\t\t  , frame_rate\t\t\t\t: null\t\t// Number of the frames to capture in one second\n\t\t  , size\t\t\t\t\t: null\t\t// Dimension each frame\n\t\t  , number\t\t\t\t\t: null\t\t// Total frame to capture\n\t\t  , every_n_frames\t\t\t: null\t\t// Frame to capture every N frames\n\t\t  , every_n_seconds\t\t\t: null\t\t// Frame to capture every N seconds\n\t\t  , every_n_percentage\t\t: null\t\t// Frame to capture every N percentage range\n\t\t  , keep_pixel_aspect_ratio\t: true\t\t// Mantain the original pixel video aspect ratio\n\t\t  , keep_aspect_ratio\t\t: true\t\t// Mantain the original aspect ratio\n\t\t  , padding_color\t\t\t: 'black'\t// Padding color\n\t\t  , file_name\t\t\t\t: null\t\t// File name\n\t\t};\n\t\t  \n\t\t// Scan all arguments\n\t\tfor (var i in arguments) {\n\t\t\t// Check the type of the argument\n\t\t\tswitch (typeof arguments[i]) {\n\t\t\t\tcase 'string':\n\t\t\t\t\tdestinationFolder = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\tnewSettings = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'function':\n\t\t\t\t\tcallback = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Check if the settings are specified\n\t\tif (newSettings !== null)\n\t\t\tutils.mergeObject(settings, newSettings);\n\n\t\t// Check if 'start_time' is in the format hours:minutes:seconds\n\t\tif (settings.start_time != null) {\n\t\t\tif (/([0-9]+):([0-9]{2}):([0-9]{2})/.exec(settings.start_time))\n\t\t\t\tsettings.start_time = utils.durationToSeconds(settings.start_time);\n\t\t\telse if (!isNaN(settings.start_time))\n\t\t\t\tsettings.start_time = parseInt(settings.start_time, 10);\n\t\t\telse\n\t\t\t\tsettings.start_time = null;\n\t\t}\n\n\t\t// Check if 'duration_time' is in the format hours:minutes:seconds\n\t\tif (settings.duration_time != null) {\n\t\t\tif (/([0-9]+):([0-9]{2}):([0-9]{2})/.exec(settings.duration_time))\n\t\t\t\tsettings.duration_time = utils.durationToSeconds(settings.duration_time);\n\t\t\telse if (!isNaN(settings.duration_time))\n\t\t\t\tsettings.duration_time = parseInt(settings.duration_time, 10);\n\t\t\telse\n\t\t\t\tsettings.duration_time = null;\n\t\t}\n\n\t\t// Check if the value of the framerate is number type\n\t\tif (settings.frame_rate != null && isNaN(settings.frame_rate))\n\t\t\tsettings.frame_rate = null;\n\n\t\t// If the size is not settings then the size of the screenshots is equal to video size\n\t\tif (settings.size == null)\n\t\t\tsettings.size = this.metadata.video.resolution.w + 'x' + this.metadata.video.resolution.h;\n\n\t\t// Check if the value of the 'number frame to capture' is number type\n\t\tif (settings.number != null && isNaN(settings.number))\n\t\t\tsettings.number = null;\n\n\t\tvar every_n_check = 0;\n\n\t\t// Check if the value of the 'every_n_frames' is number type\n\t\tif (settings.every_n_frames != null && isNaN(settings.every_n_frames)) {\n\t\t\tsettings.every_n_frames = null;\n\t\t\tevery_n_check++;\n\t\t}\n\n\t\t// Check if the value of the 'every_n_seconds' is number type\n\t\tif (settings.every_n_seconds != null && isNaN(settings.every_n_seconds)) {\n\t\t\tsettings.every_n_seconds = null;\n\t\t\tevery_n_check++;\n\t\t}\n\n\t\t// Check if the value of the 'every_n_percentage' is number type\n\t\tif (settings.every_n_percentage != null && (isNaN(settings.every_n_percentage) || settings.every_n_percentage > 100)) {\n\t\t\tsettings.every_n_percentage = null;\n\t\t\tevery_n_check++;\n\t\t}\n\t\t\n\t\tif (every_n_check >= 2) {\n\t\t\tif (callback) {\n\t\t\t\tcallback(errors.renderError('extract_frame_invalid_everyN_options'));\n\t\t\t} else {\n\t\t\t\tthrow errors.renderError('extract_frame_invalid_everyN_options');\n\t\t\t}\n\t\t}\t\t\t\n\t\t\n\t\t// If filename is null then his value is equal to original filename\n\t\tif (settings.file_name == null) {\n\t\t\tsettings.file_name = path.basename(this.file_path, path.extname(this.file_path));\n\t\t} else {\n\t\t\t// Retrieve all possible replacements\n\t\t\tvar replacements = settings.file_name.match(/(\\%[a-zA-Z]{1})/g);\n\t\t\t// Check if exists replacements. The scan all replacements and build the final filename\n\t\t\tif (replacements) {\n\t\t\t\tfor (var i in replacements) {\n\t\t\t\t\tswitch (replacements[i]) {\n\t\t\t\t\t\tcase '%t':\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace('%t', new Date().getTime());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '%s':\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace('%s', settings.size);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '%x':\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace('%x', settings.size.split(':')[0]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '%y':\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace('%y', settings.size.split(':')[1]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsettings.file_name = settings.file_name.replace(replacements[i], '');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// At the filename will added the number of the frame\n\t\tsettings.file_name = path.basename(settings.file_name, path.extname(settings.file_name)) + '_%d.jpg';\n\t\t\n\t\t// Create the directory to save the extracted frames\n\t\tutils.mkdir(destinationFolder, 0777);\n\t\t\n\t\tresetCommands(this);\n\t\t\n\t\t// Adding commands to the list\n\t\tif (settings.startTime)\n\t\t\tthis.addCommand('-ss', settings.startTime);\n\t\tif (settings.duration_time)\n\t\t\tthis.addCommand('-t', settings.duration_time);\n\t\tif (settings.frame_rate)\n\t\t\tthis.addCommand('-r', settings.frame_rate);\n\n\t\t// Setting the size and padding settings\n\t\tthis.setVideoSize(settings.size, settings.keep_pixel_aspect_ratio, settings.keep_aspect_ratio, settings.padding_color);\n\t\t// Get the dimensions\n\t\tvar newDimension = _calculateNewDimension.call(this);\n\t\t// Apply the size and padding commands\n\t\tthis.addCommand('-s', newDimension.width + 'x' + newDimension.height);\n\t\t// CHeck if isset aspect ratio options\n\t\tif (newDimension.aspect != null) {\n\t\t\tthis.addFilterComplex('scale=iw*sar:ih, pad=max(iw\\\\,ih*(' + newDimension.aspect.x + '/' + newDimension.aspect.y + ')):ow/(' + newDimension.aspect.x + '/' + newDimension.aspect.y + '):(ow-iw)/2:(oh-ih)/2' + (settings.padding_color != null ? ':' + settings.padding_color : ''));\n\t\t\tthis.addCommand('-aspect', newDimension.aspect.string);\n\t\t}\n\n\t\tif (settings.number)\n\t\t\tthis.addCommand('-vframes', settings.number);\n\t\tif (settings.every_n_frames) {\n\t\t\tthis.addCommand('-vsync', 0);\t\t\t\t\t\n\t\t\tthis.addFilterComplex('select=not(mod(n\\\\,' + settings.every_n_frames + '))');\n\t\t}\n\t\tif (settings.every_n_seconds) {\n\t\t\tthis.addCommand('-vsync', 0);\n\t\t\tthis.addFilterComplex('select=not(mod(t\\\\,' + settings.every_n_seconds + '))');\n\t\t}\n\t\tif (settings.every_n_percentage) {\n\t\t\tthis.addCommand('-vsync', 0);\n\t\t\tthis.addFilterComplex('select=not(mod(t\\\\,' + parseInt((this.metadata.duration.seconds / 100) * settings.every_n_percentage) + '))');\n\t\t}\n\t\t\n\t\t// Add destination file path to the command list\n\t\tsetOutput([destinationFolder,settings.file_name].join('/'));\n\n\t\t// Executing the commands list\n\t\treturn execCommand.call(this, callback, destinationFolder);\n\t}\n\n\t/**\n\t * Add a watermark to the video and save it\n\t */\n\tthis.fnAddWatermark = function (watermarkPath /* newFilepath , settings, callback */) {\n\n\t\tvar newFilepath\t\t= null\n\t\t  , newSettings\t\t= null\n\t\t  , callback\t\t= null;\n\t\t  \n\t\t// Scan all arguments\n\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t// Check the type of the argument\n\t\t\tswitch (typeof arguments[i]) {\n\t\t\t\tcase 'string':\n\t\t\t\t\tnewFilepath = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\tnewSettings = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'function':\n\t\t\t\t\tcallback = arguments[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tresetCommands(this);\n\n\t\t// Call the function to add the watermark options\n\t\tthis.setWatermark(watermarkPath, newSettings, true);\n\t\t\n\t\tif (newFilepath == null)\n\t\t\tnewFilepath = path.dirname(this.file_path) + '/' + \n\t\t\t\t\t\t  path.basename(this.file_path, path.extname(this.file_path)) + '_watermark_' + \n\t\t\t\t\t\t  path.basename(watermarkPath, path.extname(watermarkPath)) + \n\t\t\t\t\t\t  path.extname(this.file_path);\n\t\t\n\t\t// Add destination file path to the command list\n\t\tsetOutput(newFilepath);\n\n\t\t// Executing the commands list\n\t\treturn execCommand.call(this, callback);\n\t}\n\t\n\t/**\n\t * Constructor\n\t */\n\tvar __constructor = function (self) {\n\t\tresetCommands(self);\n\t}(this);\n}"},"lineCount":863}},"error":null,"hash":"b4ff23d85ea7d55c52b4fd6b1baf34f6","cacheData":{"env":{}}}